;;; -*- mode: scheme; coding: euc-jp -*-
;;; https://github.com/uim/uim-doc-ja/wiki/CustomizeUim

;;(define default-im-name 'anthy-utf8)
(define-key generic-on-key? '("<Control>\\" "zenkaku-hankaku"))
(define-key generic-off-key? '("<Control>\\" "zenkaku-hankaku"))

(define my-find-module
  (lambda (scm)
    (find-module-scm-path uim-plugin-scm-load-path scm)))

(define my-rule1-setting
  (list
   '(label . hiragana)
   '(autocommit . #t)
   '(prediction . #t)
   '(wildcard . #f)
   (cons 'rulefile (my-find-module "hiragana-rule.data"))
   ))

(define my-rule2-setting
  (list
   '(label . katakana)
   '(autocommit . #t)
   '(prediction . #t)
   '(wildcard . #f)
   (cons 'rulefile (my-find-module "katakana-rule.data"))
   ))

(define my-rule3-setting
  (list
   '(label . cj)
   '(autocommit . #f)
   '(prediction . #f)
   '(wildcard . #t)
   (cons 'rulefile (my-find-module "cangjie-jis-rule.data"))
   ))

(define my-rule4-setting
  (list
   '(label . zenei)
   '(autocommit . #t)
   '(prediction . #f)
   '(wildcard . #f)
   (cons 'rulefile (my-find-module "zenei-rule.data"))
   ))

(define my-rule5-setting
  (list
   '(label . hankana)
   '(autocommit . #t)
   '(prediction . #t)
   '(wildcard . #f)
   (cons 'rulefile (my-find-module "hankana-rule.data"))
   ))

(define my-rule6-setting
  (list
   '(label . cj5)
   '(autocommit . #f)
   '(prediction . #f)
   '(wildcard . #t)
   (cons 'rulefile (my-find-module "cangjie5-rule.data"))
   ))

(define test0003-rule-list
  (list my-rule1-setting my-rule2-setting my-rule3-setting my-rule4-setting my-rule5-setting my-rule6-setting))

;; "l" => "ん" "ン" "ﾝ"
;; "q" => "っ" "ッ" "ｯ"
(require "japanese.scm") 
(set! ja-rk-rule-basic
      (filter (lambda (x)
                (not (or (equal? (caaar x) "l") (equal? (caaar x) "q"))))
              ja-rk-rule-basic))
(set! ja-rk-rule-basic
      (append '(((("l") . ()) ("ん" "ン" "ﾝ"))
                ((("q") . ()) ("っ" "ッ" "ｯ")))
              ja-rk-rule-basic)) 

(ja-rk-rule-update)

;;; vim:ft=scheme:fenc=euc-jp
